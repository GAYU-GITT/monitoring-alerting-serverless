version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - npm install -g yarn
  pre_build:
    commands:
      - aws kms decrypt --ciphertext-blob fileb://`pwd`$ENC_FILE_PATH --key-id $KMS_KEY_ID --output text --query Plaintext | base64 --decode >  `pwd`/.env
      - echo Environment Variables decrypted...  
      - echo Logging in to Amazom ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - BUILD_ID=$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - VERSION_ID=$IMAGE_TAG_ENVIRONMENT
      - IMAGE_TAG=${VERSION_ID}${BUILD_ID}
      - echo IMAGE_TAG 
  build:
    commands:
      - echo Docker Image Build started on `date`
      - echo Building the Docker image...
      - docker build -t $ECR_REPO_NAME:$IMAGE_TAG . -f Dockerfile
      - docker tag $ECR_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - echo Docker image successfully pushed to ECR...
      - printf '[{"name":"Container", "imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json